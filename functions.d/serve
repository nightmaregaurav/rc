serve() {
  local port=4200
  local host="localhost"
  local proxy="http://localhost:4200?"
  local dirlist=true

  # Help text
  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "Usage: serve [--port PORT] [--host HOST] [--proxy URL] [--dirlist true|false]"
    echo
    echo "Defaults:"
    echo "  --port     4200"
    echo "  --host     localhost"
    echo "  --proxy    http://localhost:4200?"
    echo "  --dirlist  true"
    echo
    echo "Examples:"
    echo "  serve                          # Start server with defaults"
    echo "  serve --port 3000              # Use custom port"
    echo "  serve --dirlist false          # Disable directory listing"
    echo "  serve --proxy http://api.localhost:3000?  # Custom fallback proxy"
    return 0
  fi

  # Parse arguments
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --port)
        port="$2"
        shift 2
        ;;
      --host)
        host="$2"
        shift 2
        ;;
      --proxy)
        proxy="$2"
        shift 2
        ;;
      --dirlist)
        dirlist="$2"
        shift 2
        ;;
      *)
        echo "Unknown option: $1"
        echo "Use --help for usage."
        return 1
        ;;
    esac
  done

  # Build command
  local cmd="npx http-server $(pwd) -a $host --port $port --proxy $proxy --log-ip --gzip --brotli"
  [[ "$dirlist" == false ]] && cmd+=" -d false"

  echo "Running: $cmd"
  eval "$cmd"
}

_serve_completion() {
  local cur prev opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="--port --host --proxy --dirlist --help -h"

  case "$prev" in
    --dirlist)
      COMPREPLY=( $(compgen -W "true false" -- "$cur") )
      return 0
      ;;
    --port|--host|--proxy)
      return 0
      ;;
  esac

  # Filter out options that have already been used
  local used_opts=()
  for ((i=1; i < COMP_CWORD; i++)); do
    if [[ ${COMP_WORDS[i]} == --* ]]; then
      used_opts+=(${COMP_WORDS[i]})
    fi
  done

  local available_opts=()
  # If there's at least one flag already used, remove help options
  if [ ${#used_opts[@]} -gt 0 ]; then
    opts=${opts// -h}
    opts=${opts//--help/}
  fi

  for opt in $opts; do
    if [[ ! " ${used_opts[@]} " =~ " $opt " ]]; then
      available_opts+=("$opt")
    fi
  done

  COMPREPLY=( $(compgen -W "${available_opts[*]}" -- "$cur") )
}
complete -F _serve_completion serve

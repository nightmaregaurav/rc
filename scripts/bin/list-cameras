#!/usr/bin/env bash

# Help message
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  echo "Usage: $0"
  echo
  echo "Fetches the list of available cameras."
  echo
  echo "Examples:"
  echo "  $0"
  exit 0
fi

# Detect OS
os=$(uname | tr '[:upper:]' '[:lower:]')

# Windows (via Git Bash or WSL)
if [[ "$os" == *"mingw"* || "$os" == *"msys"* || "$os" == *"cygwin"* ]]; then
    echo "Video devices (Windows[$os] - dshow):"
    ffmpeg -list_devices true -f dshow -i dummy 2>&1 | \
    grep '(video)' | \
    sed 's/.*"\(.*\)".*/\1/'

# macOS
elif [[ "$os" == "darwin" ]]; then
    echo "Video devices (macOS[$os] - avfoundation):"
    ffmpeg -f avfoundation -list_devices true -i "" 2>&1 | \
    sed -n '/AVFoundation video devices:/,/AVFoundation audio devices:/p' | \
    sed '1d;$d' | \
    sed 's/^\[AVFoundation[^]]*\] //' | \
    sed 's/^\[[0-9]*\] //'

# Linux
elif [[ "$os" == "linux" ]]; then
    echo "Video devices (Linux[$os] - v4l2):"
    for device in /dev/video*; do
        if v4l2-ctl --device="$device" --all &> /dev/null; then
            name=$(v4l2-ctl \
                --device="$device" \
                --info | \
                grep "Device name" | \
                cut -d ":" -f2- | \
                sed 's/^ *//'
            )
            echo "$device - $name"
        fi
    done

else
    echo "Unsupported OS: $os"
    exit 1
fi

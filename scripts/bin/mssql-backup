#!/usr/bin/env bash

show_help() {
  echo "Usage: $0 [options]"
  echo
  echo "Options:"
  echo "  -H, --host       SQL Server host (default: localhost)"
  echo "  -U, --user       SQL Server user (default: sa)"
  echo "  -P, --password   SQL Server password"
  echo "  -D, --database   Database name to back up"
  echo "  -h, --help       Show this help message"
  echo
  echo "Example:"
  echo "  $0 -H localhost -U sa -P MyPassword123 -D demodb"
  exit 0
}

# Check if sqlpackage is installed
if ! command -v sqlpackage &> /dev/null; then
  echo "Error: 'sqlpackage' command not found."
  echo "You can install it by running:"
  echo "  dotnet tool install -g microsoft.sqlpackage"
  exit 1
fi

# Default values
HOST="localhost"
USER="sa"

# Parse args
while [[ $# -gt 0 ]]; do
  case $1 in
    -H|--host) HOST="$2"; shift 2 ;;
    -U|--user) USER="$2"; shift 2 ;;
    -P|--password) PASSWORD="$2"; shift 2 ;;
    -D|--database) DATABASE="$2"; shift 2 ;;
    -h|--help) show_help ;;
    *) echo "Unknown option: $1"; show_help ;;
  esac
done

if [[ -z "$DATABASE" || -z "$PASSWORD" ]]; then
  echo "Error: --database and --password are required"
  exit 1
fi

TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
FILENAME="${DATABASE}-${TIMESTAMP}.bacpac"
OUTPUT_DIR=$(pwd)
FULLPATH="$OUTPUT_DIR/$FILENAME"

command="sqlpackage /Action:Export /TargetFile:\"$FULLPATH\" /SourceServerName:\"$HOST\" /SourceDatabaseName:\"$DATABASE\" /SourceUser:\"$USER\" /SourcePassword:\"$PASSWORD\" /SourceEncryptConnection:False /SourceTrustServerCertificate:True"
echo "Executing command: $command"
eval "$command"

if [[ $? -eq 0 ]]; then
  echo "Backup successful: /var/opt/mssql/data/$FILENAME"
else
  echo "Backup failed!"
fi

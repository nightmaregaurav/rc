#!/usr/bin/env bash

show_help() {
  echo "Usage: $0 [options]"
  echo
  echo "Options:"
  echo "  -H, --host       SQL Server host (default: localhost)"
  echo "  -U, --user       SQL Server user (default: sa)"
  echo "  -P, --password   SQL Server password"
  echo "  -D, --database   Database name to restore into"
  echo "  -F, --file       Backup file path to restore from"
  echo "  -h, --help       Show this help message"
  echo
  echo "Example:"
  echo "  $0 -H localhost -U sa -P MyPassword123 -D demodb -F /var/opt/mssql/data/demodb-20251006-101200.bak"
  exit 0
}

# Check if sqlpackage is installed
if ! command -v sqlpackage &> /dev/null; then
  echo "Error: 'sqlpackage' command not found."
  echo "You can install it by running:"
  echo "  dotnet tool install -g microsoft.sqlpackage"
  exit 1
fi

# Default values
HOST="localhost"
USER="sa"

# Parse args
while [[ $# -gt 0 ]]; do
  case $1 in
    -H|--host) HOST="$2"; shift 2 ;;
    -U|--user) USER="$2"; shift 2 ;;
    -P|--password) PASSWORD="$2"; shift 2 ;;
    -D|--database) DATABASE="$2"; shift 2 ;;
    -F|--file) FILE="$2"; shift 2 ;;
    --help) show_help ;;
    *) echo "Unknown option: $1"; show_help ;;
  esac
done

if [[ -z "$DATABASE" || -z "$PASSWORD" || -z "$FILE" ]]; then
  echo "Error: --database, --password, and --file are required"
  exit 1
fi

command="sqlpackage /Action:Import /SourceFile:\"$FILE\" /TargetServerName:\"$HOST\" /TargetDatabaseName:\"$DATABASE\" /TargetUser:\"$USER\" /TargetPassword:\"$PASSWORD\" /TargetEncryptConnection:False /TargetTrustServerCertificate:True"
echo "Executing command: $command"
eval "$command"

if [[ $? -eq 0 ]]; then
  echo "Restore command executed successfully: $FILE â†’ $DATABASE"
else
  echo "Restore failed!"
fi
